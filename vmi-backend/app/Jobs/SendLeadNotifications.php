<?php

declare(strict_types=1);

namespace App\Jobs;

use App\Mail\LeadCreatedMail;
use App\Models\Lead;
use App\Services\TelegramService;
use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\Mail;

class SendLeadNotifications implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;

    /** @var int –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–ø—ã—Ç–æ–∫ */
    public int $tries = 3;

    /** @var int —Ç–∞–π–º–∞—É—Ç –∑–∞–¥–∞—á–∏ (—Å–µ–∫) */
    public int $timeout = 15;

    public function __construct(public Lead $lead) {}

    public function handle(TelegramService $telegram): void
    {
        // Email (–≤ dev –ø—Ä–∏ MAIL_MAILER=log —É–π–¥–µ—Ç –≤ storage/logs/laravel.log)
        $to = env('SALES_TO');
        if (!empty($to)) {
            Mail::to($to)->send(new LeadCreatedMail($this->lead));
        } else {
            Log::warning('SALES_TO is empty, skipping email notification.');
        }

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ —Ç–∏–ø—É
        $title = $this->lead->type === 'product'
            ? 'üõí <b>–ó–∞—è–≤–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä</b>'
            : 'üìû <b>–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º</b>';

        // –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è —á–∞—Å–æ–≤ ‚Äî –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (—Å–º. APP_TIMEZONE)
        $tz = config('app.timezone', 'UTC');
        $timeLocal = now()->setTimezone($tz)->format('d.m.Y H:i');

        $lines = [
            $title,
            '',
            '<b>–¢–∏–ø:</b> ' . e($this->lead->type),
            '<b>–ò–º—è:</b> ' . e($this->lead->name),
            '<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ' . e($this->lead->phone),
            '<b>Email:</b> ' . e($this->lead->email),
        ];

        if ($this->lead->message) {
            $lines[] = '<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> ' . e($this->lead->message);
        }
        if ($this->lead->product_title) {
            $qty = (int)($this->lead->quantity ?? 1);
            $lines[] = 'üß© <b>–¢–æ–≤–∞—Ä:</b> ' . e($this->lead->product_title) . ' √ó ' . $qty;
        }
        if ($this->lead->source) {
            $lines[] = 'üß≠ <b>–ò—Å—Ç–æ—á–Ω–∏–∫:</b> ' . e($this->lead->source);
        }

        // URL —É–±—Ä–∞–Ω –ø–æ –ø—Ä–æ—Å—å–±–µ
        $lines[] = 'üïí ' . $timeLocal . ' (–¢–∞—à–∫–µ–Ω—Ç)';

        $telegram->send(implode("\n", $lines));
    }

    public function failed(\Throwable $e): void
    {
        Log::error('SendLeadNotifications failed', [
            'lead_id' => $this->lead->id ?? null,
            'error'   => $e->getMessage(),
        ]);
    }
}
